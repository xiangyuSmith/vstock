/*!
 * Bootstrap v3.3.5 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under the MIT license
 */
if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); +
    function(a) {
        "use strict";
        var b = a.fn.jquery.split(" ")[0].split(".");
        if (b[0] < 2 && b[1] < 9 || 1 == b[0] && 9 == b[1] && b[2] < 1) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher")
    } (jQuery),
    +
        function(a) {
            "use strict";
            function b() {
                var a = document.createElement("bootstrap"),
                    b = {
                        WebkitTransition: "webkitTransitionEnd",
                        MozTransition: "transitionend",
                        OTransition: "oTransitionEnd otransitionend",
                        transition: "transitionend"
                    };
                for (var c in b) if (void 0 !== a.style[c]) return {
                    end: b[c]
                };
                return ! 1
            }
            a.fn.emulateTransitionEnd = function(b) {
                var c = !1,
                    d = this;
                a(this).one("bsTransitionEnd",
                    function() {
                        c = !0
                    });
                var e = function() {
                    c || a(d).trigger(a.support.transition.end)
                };
                return setTimeout(e, b),
                    this
            },
                a(function() {
                    a.support.transition = b(),
                    a.support.transition && (a.event.special.bsTransitionEnd = {
                        bindType: a.support.transition.end,
                        delegateType: a.support.transition.end,
                        handle: function(b) {
                            return a(b.target).is(this) ? b.handleObj.handler.apply(this, arguments) : void 0
                        }
                    })
                })
        } (jQuery),
    +
        function(a) {
            "use strict";
            function b(b) {
                return this.each(function() {
                    var d = a(this),
                        e = d.data("bs.tooltip"),
                        f = "object" == typeof b && b; (e || !/destroy|hide/.test(b)) && (e || d.data("bs.tooltip", e = new c(this, f)), "string" == typeof b && e[b]())
                })
            }
            var c = function(a, b) {
                this.type = null,
                    this.options = null,
                    this.enabled = null,
                    this.timeout = null,
                    this.hoverState = null,
                    this.$element = null,
                    this.inState = null,
                    this.init("tooltip", a, b)
            };
            c.VERSION = "3.3.5",
                c.TRANSITION_DURATION = 150,
                c.DEFAULTS = {
                    animation: !0,
                    placement: "top",
                    selector: !1,
                    template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
                    trigger: "hover focus",
                    title: "",
                    delay: 0,
                    html: !1,
                    container: !1,
                    viewport: {
                        selector: "body",
                        padding: 0
                    }
                },
                c.prototype.init = function(b, c, d) {
                    if (this.enabled = !0, this.type = b, this.$element = a(c), this.options = this.getOptions(d), this.$viewport = this.options.viewport && a(a.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = {
                            click: !1,
                            hover: !1,
                            focus: !1
                        },
                        this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
                    for (var e = this.options.trigger.split(" "), f = e.length; f--;) {
                        var g = e[f];
                        if ("click" == g) this.$element.on("click." + this.type, this.options.selector, a.proxy(this.toggle, this));
                        else if ("manual" != g) {
                            var h = "hover" == g ? "mouseenter": "focusin",
                                i = "hover" == g ? "mouseleave": "focusout";
                            this.$element.on(h + "." + this.type, this.options.selector, a.proxy(this.enter, this)),
                                this.$element.on(i + "." + this.type, this.options.selector, a.proxy(this.leave, this))
                        }
                    }
                    this.options.selector ? this._options = a.extend({},
                        this.options, {
                            trigger: "manual",
                            selector: ""
                        }) : this.fixTitle()
                },
                c.prototype.getDefaults = function() {
                    return c.DEFAULTS
                },
                c.prototype.getOptions = function(b) {
                    return b = a.extend({},
                        this.getDefaults(), this.$element.data(), b),
                    b.delay && "number" == typeof b.delay && (b.delay = {
                        show: b.delay,
                        hide: b.delay
                    }),
                        b
                },
                c.prototype.getDelegateOptions = function() {
                    var b = {},
                        c = this.getDefaults();
                    return this._options && a.each(this._options,
                        function(a, d) {
                            c[a] != d && (b[a] = d)
                        }),
                        b
                },
                c.prototype.enter = function(b) {
                    var c = b instanceof this.constructor ? b: a(b.currentTarget).data("bs." + this.type);
                    return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c)),
                    b instanceof a.Event && (c.inState["focusin" == b.type ? "focus": "hover"] = !0),
                        c.tip().hasClass("in") || "in" == c.hoverState ? void(c.hoverState = "in") : (clearTimeout(c.timeout), c.hoverState = "in", c.options.delay && c.options.delay.show ? void(c.timeout = setTimeout(function() {
                                "in" == c.hoverState && c.show()
                            },
                            c.options.delay.show)) : c.show())
                },
                c.prototype.isInStateTrue = function() {
                    for (var a in this.inState) if (this.inState[a]) return ! 0;
                    return ! 1
                },
                c.prototype.leave = function(b) {
                    var c = b instanceof this.constructor ? b: a(b.currentTarget).data("bs." + this.type);
                    return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c)),
                    b instanceof a.Event && (c.inState["focusout" == b.type ? "focus": "hover"] = !1),
                        c.isInStateTrue() ? void 0 : (clearTimeout(c.timeout), c.hoverState = "out", c.options.delay && c.options.delay.hide ? void(c.timeout = setTimeout(function() {
                                "out" == c.hoverState && c.hide()
                            },
                            c.options.delay.hide)) : c.hide())
                },
                c.prototype.show = function() {
                    var b = a.Event("show.bs." + this.type);
                    if (this.hasContent() && this.enabled) {
                        this.$element.trigger(b);
                        var d = a.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
                        if (b.isDefaultPrevented() || !d) return;
                        var e = this,
                            f = this.tip(),
                            g = this.getUID(this.type);
                        this.setContent(),
                            f.attr("id", g),
                            this.$element.attr("aria-describedby", g),
                        this.options.animation && f.addClass("fade");
                        var h = "function" == typeof this.options.placement ? this.options.placement.call(this, f[0], this.$element[0]) : this.options.placement,
                            i = /\s?auto?\s?/i,
                            j = i.test(h);
                        j && (h = h.replace(i, "") || "top"),
                            f.detach().css({
                                top: 0,
                                left: 0,
                                display: "block"
                            }).addClass(h).data("bs." + this.type, this),
                            this.options.container ? f.appendTo(this.options.container) : f.insertAfter(this.$element),
                            this.$element.trigger("inserted.bs." + this.type);
                        var k = this.getPosition(),
                            l = f[0].offsetWidth,
                            m = f[0].offsetHeight;
                        if (j) {
                            var n = h,
                                o = this.getPosition(this.$viewport);
                            h = "bottom" == h && k.bottom + m > o.bottom ? "top": "top" == h && k.top - m < o.top ? "bottom": "right" == h && k.right + l > o.width ? "left": "left" == h && k.left - l < o.left ? "right": h,
                                f.removeClass(n).addClass(h)
                        }
                        var p = this.getCalculatedOffset(h, k, l, m);
                        this.applyPlacement(p, h);
                        var q = function() {
                            var a = e.hoverState;
                            e.$element.trigger("shown.bs." + e.type),
                                e.hoverState = null,
                            "out" == a && e.leave(e)
                        };
                        a.support.transition && this.$tip.hasClass("fade") ? f.one("bsTransitionEnd", q).emulateTransitionEnd(c.TRANSITION_DURATION) : q()
                    }
                },
                c.prototype.applyPlacement = function(b, c) {
                    var d = this.tip(),
                        e = d[0].offsetWidth,
                        f = d[0].offsetHeight,
                        g = parseInt(d.css("margin-top"), 10),
                        h = parseInt(d.css("margin-left"), 10);
                    isNaN(g) && (g = 0),
                    isNaN(h) && (h = 0),
                        b.top += g,
                        b.left += h,
                        a.offset.setOffset(d[0], a.extend({
                                using: function(a) {
                                    d.css({
                                        top: Math.round(a.top),
                                        left: Math.round(a.left)
                                    })
                                }
                            },
                            b), 0),
                        d.addClass("in");
                    var i = d[0].offsetWidth,
                        j = d[0].offsetHeight;
                    "top" == c && j != f && (b.top = b.top + f - j);
                    var k = this.getViewportAdjustedDelta(c, b, i, j);
                    k.left ? b.left += k.left: b.top += k.top;
                    var l = /top|bottom/.test(c),
                        m = l ? 2 * k.left - e + i: 2 * k.top - f + j,
                        n = l ? "offsetWidth": "offsetHeight";
                    d.offset(b),
                        this.replaceArrow(m, d[0][n], l)
                },
                c.prototype.replaceArrow = function(a, b, c) {
                    this.arrow().css(c ? "left": "top", 50 * (1 - a / b) + "%").css(c ? "top": "left", "")
                },
                c.prototype.setContent = function() {
                    var a = this.tip(),
                        b = this.getTitle();
                    a.find(".tooltip-inner")[this.options.html ? "html": "text"](b),
                        a.removeClass("fade in top bottom left right")
                },
                c.prototype.hide = function(b) {
                    function d() {
                        "in" != e.hoverState && f.detach(),
                            e.$element.removeAttr("aria-describedby").trigger("hidden.bs." + e.type),
                        b && b()
                    }
                    var e = this,
                        f = a(this.$tip),
                        g = a.Event("hide.bs." + this.type);
                    return this.$element.trigger(g),
                        g.isDefaultPrevented() ? void 0 : (f.removeClass("in"), a.support.transition && f.hasClass("fade") ? f.one("bsTransitionEnd", d).emulateTransitionEnd(c.TRANSITION_DURATION) : d(), this.hoverState = null, this)
                },
                c.prototype.fixTitle = function() {
                    var a = this.$element; (a.attr("title") || "string" != typeof a.attr("data-original-title")) && a.attr("data-original-title", a.attr("title") || "").attr("title", "")
                },
                c.prototype.hasContent = function() {
                    return this.getTitle()
                },
                c.prototype.getPosition = function(b) {
                    b = b || this.$element;
                    var c = b[0],
                        d = "BODY" == c.tagName,
                        e = c.getBoundingClientRect();
                    null == e.width && (e = a.extend({},
                        e, {
                            width: e.right - e.left,
                            height: e.bottom - e.top
                        }));
                    var f = d ? {
                            top: 0,
                            left: 0
                        }: b.offset(),
                        g = {
                            scroll: d ? document.documentElement.scrollTop || document.body.scrollTop: b.scrollTop()
                        },
                        h = d ? {
                            width: a(window).width(),
                            height: a(window).height()
                        }: null;
                    return a.extend({},
                        e, g, h, f)
                },
                c.prototype.getCalculatedOffset = function(a, b, c, d) {
                    return "bottom" == a ? {
                        top: b.top + b.height,
                        left: b.left + b.width / 2 - c / 2
                    }: "top" == a ? {
                        top: b.top - d,
                        left: b.left + b.width / 2 - c / 2
                    }: "left" == a ? {
                        top: b.top + b.height / 2 - d / 2,
                        left: b.left - c
                    }: {
                        top: b.top + b.height / 2 - d / 2,
                        left: b.left + b.width
                    }
                },
                c.prototype.getViewportAdjustedDelta = function(a, b, c, d) {
                    var e = {
                        top: 0,
                        left: 0
                    };
                    if (!this.$viewport) return e;
                    var f = this.options.viewport && this.options.viewport.padding || 0,
                        g = this.getPosition(this.$viewport);
                    if (/right|left/.test(a)) {
                        var h = b.top - f - g.scroll,
                            i = b.top + f - g.scroll + d;
                        h < g.top ? e.top = g.top - h: i > g.top + g.height && (e.top = g.top + g.height - i)
                    } else {
                        var j = b.left - f,
                            k = b.left + f + c;
                        j < g.left ? e.left = g.left - j: k > g.right && (e.left = g.left + g.width - k)
                    }
                    return e
                },
                c.prototype.getTitle = function() {
                    var a, b = this.$element,
                        c = this.options;
                    return a = b.attr("data-original-title") || ("function" == typeof c.title ? c.title.call(b[0]) : c.title)
                },
                c.prototype.getUID = function(a) {
                    do a += ~~ (1e6 * Math.random());
                    while (document.getElementById(a));
                    return a
                },
                c.prototype.tip = function() {
                    if (!this.$tip && (this.$tip = a(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!");
                    return this.$tip
                },
                c.prototype.arrow = function() {
                    return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
                },
                c.prototype.enable = function() {
                    this.enabled = !0
                },
                c.prototype.disable = function() {
                    this.enabled = !1
                },
                c.prototype.toggleEnabled = function() {
                    this.enabled = !this.enabled
                },
                c.prototype.toggle = function(b) {
                    var c = this;
                    b && (c = a(b.currentTarget).data("bs." + this.type), c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c))),
                        b ? (c.inState.click = !c.inState.click, c.isInStateTrue() ? c.enter(c) : c.leave(c)) : c.tip().hasClass("in") ? c.leave(c) : c.enter(c)
                },
                c.prototype.destroy = function() {
                    var a = this;
                    clearTimeout(this.timeout),
                        this.hide(function() {
                            a.$element.off("." + a.type).removeData("bs." + a.type),
                            a.$tip && a.$tip.detach(),
                                a.$tip = null,
                                a.$arrow = null,
                                a.$viewport = null
                        })
                };
            var d = a.fn.tooltip;
            a.fn.tooltip = b,
                a.fn.tooltip.Constructor = c,
                a.fn.tooltip.noConflict = function() {
                    return a.fn.tooltip = d,
                        this
                }
        } (jQuery),
    +
        function(a) {
            "use strict";
            function b(b) {
                return this.each(function() {
                    var d = a(this),
                        e = d.data("bs.popover"),
                        f = "object" == typeof b && b; (e || !/destroy|hide/.test(b)) && (e || d.data("bs.popover", e = new c(this, f)), "string" == typeof b && e[b]())
                })
            }
            var c = function(a, b) {
                this.init("popover", a, b)
            };
            if (!a.fn.tooltip) throw new Error("Popover requires tooltip.js");
            c.VERSION = "3.3.5",
                c.DEFAULTS = a.extend({},
                    a.fn.tooltip.Constructor.DEFAULTS, {
                        placement: "right",
                        trigger: "click",
                        content: "",
                        template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
                    }),
                c.prototype = a.extend({},
                    a.fn.tooltip.Constructor.prototype),
                c.prototype.constructor = c,
                c.prototype.getDefaults = function() {
                    return c.DEFAULTS
                },
                c.prototype.setContent = function() {
                    var a = this.tip(),
                        b = this.getTitle(),
                        c = this.getContent();
                    a.find(".popover-title")[this.options.html ? "html": "text"](b),
                        a.find(".popover-content").children().detach().end()[this.options.html ? "string" == typeof c ? "html": "append": "text"](c),
                        a.removeClass("fade top bottom left right in"),
                    a.find(".popover-title").html() || a.find(".popover-title").hide()
                },
                c.prototype.hasContent = function() {
                    return this.getTitle() || this.getContent()
                },
                c.prototype.getContent = function() {
                    var a = this.$element,
                        b = this.options;
                    return a.attr("data-content") || ("function" == typeof b.content ? b.content.call(a[0]) : b.content)
                },
                c.prototype.arrow = function() {
                    return this.$arrow = this.$arrow || this.tip().find(".arrow")
                };
            var d = a.fn.popover;
            a.fn.popover = b,
                a.fn.popover.Constructor = c,
                a.fn.popover.noConflict = function() {
                    return a.fn.popover = d,
                        this
                }
        } (jQuery),
    +
        function(a) {
            "use strict";
            function b(c, d) {
                this.$body = a(document.body),
                    this.$scrollElement = a(a(c).is(document.body) ? window: c),
                    this.options = a.extend({},
                        b.DEFAULTS, d),
                    this.selector = (this.options.target || "") + " .nav li > a",
                    this.offsets = [],
                    this.targets = [],
                    this.activeTarget = null,
                    this.scrollHeight = 0,
                    this.$scrollElement.on("scroll.bs.scrollspy", a.proxy(this.process, this)),
                    this.refresh(),
                    this.process()
            }
            function c(c) {
                return this.each(function() {
                    var d = a(this),
                        e = d.data("bs.scrollspy"),
                        f = "object" == typeof c && c;
                    e || d.data("bs.scrollspy", e = new b(this, f)),
                    "string" == typeof c && e[c]()
                })
            }
            b.VERSION = "3.3.5",
                b.DEFAULTS = {
                    offset: 10
                },
                b.prototype.getScrollHeight = function() {
                    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
                },
                b.prototype.refresh = function() {
                    var b = this,
                        c = "offset",
                        d = 0;
                    this.offsets = [],
                        this.targets = [],
                        this.scrollHeight = this.getScrollHeight(),
                    a.isWindow(this.$scrollElement[0]) || (c = "position", d = this.$scrollElement.scrollTop()),
                        this.$body.find(this.selector).map(function() {
                            var b = a(this),
                                e = b.data("target") || b.attr("href"),
                                f = /^#./.test(e) && a(e);
                            return f && f.length && f.is(":visible") && [[f[c]().top + d, e]] || null
                        }).sort(function(a, b) {
                            return a[0] - b[0]
                        }).each(function() {
                            b.offsets.push(this[0]),
                                b.targets.push(this[1])
                        })
                },
                b.prototype.process = function() {
                    var a, b = this.$scrollElement.scrollTop() + this.options.offset,
                        c = this.getScrollHeight(),
                        d = this.options.offset + c - this.$scrollElement.height(),
                        e = this.offsets,
                        f = this.targets,
                        g = this.activeTarget;
                    if (this.scrollHeight != c && this.refresh(), b >= d) return g != (a = f[f.length - 1]) && this.activate(a);
                    if (g && b < e[0]) return this.activeTarget = null,
                        this.clear();
                    for (a = e.length; a--;) g != f[a] && b >= e[a] && (void 0 === e[a + 1] || b < e[a + 1]) && this.activate(f[a])
                },
                b.prototype.activate = function(b) {
                    this.activeTarget = b,
                        this.clear();
                    var c = this.selector + '[data-target="' + b + '"],' + this.selector + '[href="' + b + '"]',
                        d = a(c).parents("li").addClass("active");
                    d.parent(".dropdown-menu").length && (d = d.closest("li.dropdown").addClass("active")),
                        d.trigger("activate.bs.scrollspy")
                },
                b.prototype.clear = function() {
                    a(this.selector).parentsUntil(this.options.target, ".active").removeClass("active")
                };
            var d = a.fn.scrollspy;
            a.fn.scrollspy = c,
                a.fn.scrollspy.Constructor = b,
                a.fn.scrollspy.noConflict = function() {
                    return a.fn.scrollspy = d,
                        this
                },
                a(window).on("load.bs.scrollspy.data-api",
                    function() {
                        a('[data-spy="scroll"]').each(function() {
                            var b = a(this);
                            c.call(b, b.data())
                        })
                    })
        } (jQuery),
    +
        function(a) {
            "use strict";
            function b(b) {
                return this.each(function() {
                    var d = a(this),
                        e = d.data("bs.tab");
                    e || d.data("bs.tab", e = new c(this)),
                    "string" == typeof b && e[b]()
                })
            }
            var c = function(b) {
                this.element = a(b)
            };
            c.VERSION = "3.3.5",
                c.TRANSITION_DURATION = 150,
                c.prototype.show = function() {
                    var b = this.element,
                        c = b.closest("ul:not(.dropdown-menu)"),
                        d = b.data("target");
                    if (d || (d = b.attr("href"), d = d && d.replace(/.*(?=#[^\s]*$)/, "")), !b.parent("li").hasClass("active")) {
                        var e = c.find(".active:last a"),
                            f = a.Event("hide.bs.tab", {
                                relatedTarget: b[0]
                            }),
                            g = a.Event("show.bs.tab", {
                                relatedTarget: e[0]
                            });
                        if (e.trigger(f), b.trigger(g), !g.isDefaultPrevented() && !f.isDefaultPrevented()) {
                            var h = a(d);
                            this.activate(b.closest("li"), c),
                                this.activate(h, h.parent(),
                                    function() {
                                        e.trigger({
                                            type: "hidden.bs.tab",
                                            relatedTarget: b[0]
                                        }),
                                            b.trigger({
                                                type: "shown.bs.tab",
                                                relatedTarget: e[0]
                                            })
                                    })
                        }
                    }
                },
                c.prototype.activate = function(b, d, e) {
                    function f() {
                        g.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1),
                            b.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0),
                            h ? (b[0].offsetWidth, b.addClass("in")) : b.removeClass("fade"),
                        b.parent(".dropdown-menu").length && b.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0),
                        e && e()
                    }
                    var g = d.find("> .active"),
                        h = e && a.support.transition && (g.length && g.hasClass("fade") || !!d.find("> .fade").length);
                    g.length && h ? g.one("bsTransitionEnd", f).emulateTransitionEnd(c.TRANSITION_DURATION) : f(),
                        g.removeClass("in")
                };
            var d = a.fn.tab;
            a.fn.tab = b,
                a.fn.tab.Constructor = c,
                a.fn.tab.noConflict = function() {
                    return a.fn.tab = d,
                        this
                };
            var e = function(c) {
                c.preventDefault(),
                    b.call(a(this), "show")
            };
            a(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', e).on("click.bs.tab.data-api", '[data-toggle="pill"]', e)
        } (jQuery),
    +
        function(a) {
            "use strict";
            function b(b) {
                return this.each(function() {
                    var d = a(this),
                        e = d.data("bs.affix"),
                        f = "object" == typeof b && b;
                    e || d.data("bs.affix", e = new c(this, f)),
                    "string" == typeof b && e[b]()
                })
            }
            var c = function(b, d) {
                this.options = a.extend({},
                    c.DEFAULTS, d),
                    this.$target = a(this.options.target).on("scroll.bs.affix.data-api", a.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", a.proxy(this.checkPositionWithEventLoop, this)),
                    this.$element = a(b),
                    this.affixed = null,
                    this.unpin = null,
                    this.pinnedOffset = null,
                    this.checkPosition()
            };
            c.VERSION = "3.3.5",
                c.RESET = "affix affix-top affix-bottom",
                c.DEFAULTS = {
                    offset: 0,
                    target: window
                },
                c.prototype.getState = function(a, b, c, d) {
                    var e = this.$target.scrollTop(),
                        f = this.$element.offset(),
                        g = this.$target.height();
                    if (null != c && "top" == this.affixed) return c > e ? "top": !1;
                    if ("bottom" == this.affixed) return null != c ? e + this.unpin <= f.top ? !1 : "bottom": a - d >= e + g ? !1 : "bottom";
                    var h = null == this.affixed,
                        i = h ? e: f.top,
                        j = h ? g: b;
                    return null != c && c >= e ? "top": null != d && i + j >= a - d ? "bottom": !1
                },
                c.prototype.getPinnedOffset = function() {
                    if (this.pinnedOffset) return this.pinnedOffset;
                    this.$element.removeClass(c.RESET).addClass("affix");
                    var a = this.$target.scrollTop(),
                        b = this.$element.offset();
                    return this.pinnedOffset = b.top - a
                },
                c.prototype.checkPositionWithEventLoop = function() {
                    setTimeout(a.proxy(this.checkPosition, this), 1)
                },
                c.prototype.checkPosition = function() {
                    if (this.$element.is(":visible")) {
                        var b = this.$element.height(),
                            d = this.options.offset,
                            e = d.top,
                            f = d.bottom,
                            g = Math.max(a(document).height(), a(document.body).height());
                        "object" != typeof d && (f = e = d),
                        "function" == typeof e && (e = d.top(this.$element)),
                        "function" == typeof f && (f = d.bottom(this.$element));
                        var h = this.getState(g, b, e, f);
                        if (this.affixed != h) {
                            null != this.unpin && this.$element.css("top", "");
                            var i = "affix" + (h ? "-" + h: ""),
                                j = a.Event(i + ".bs.affix");
                            if (this.$element.trigger(j), j.isDefaultPrevented()) return;
                            this.affixed = h,
                                this.unpin = "bottom" == h ? this.getPinnedOffset() : null,
                                this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace("affix", "affixed") + ".bs.affix")
                        }
                        "bottom" == h && this.$element.offset({
                            top: g - b - f
                        })
                    }
                };
            var d = a.fn.affix;
            a.fn.affix = b,
                a.fn.affix.Constructor = c,
                a.fn.affix.noConflict = function() {
                    return a.fn.affix = d,
                        this
                },
                a(window).on("load",
                    function() {
                        a('[data-spy="affix"]').each(function() {
                            var c = a(this),
                                d = c.data();
                            d.offset = d.offset || {},
                            null != d.offsetBottom && (d.offset.bottom = d.offsetBottom),
                            null != d.offsetTop && (d.offset.top = d.offsetTop),
                                b.call(c, d)
                        })
                    })
        } (jQuery);